name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
  release:
    types:
      - created
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  test:
    name: test dagster=${{ matrix.dagster_version }} py=${{ matrix.py }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - Ubuntu
          # MacOs is commented out because: 1. For some reason it's very slow. 2. It never had OS-specific issues
#          - MacOs
        py:
          - "3.11"
          - "3.10"
          - "3.9"
        dagster_version:
          - "1.10.0"
    steps:
      - uses: actions/checkout@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.5"
          python-version: "${{ matrix.py }}"
          enable-cache: true
      - name: Install dependencies
        run: uv sync
      - name: Install matrix overrides
        run: uv add dagster~=${{ matrix.dagster_version }}
      - name: Print dagster info
        run: uv run python -c 'import dagster; print(dagster.__version__)'
      - name: Run tests
        run: uv run pytest -v .

  lint:
    name: lint dagster=${{ matrix.dagster_version }} py=${{ matrix.py }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - Ubuntu
        py:
          - "3.11"
          - "3.10"
          - "3.9"
        dagster_version:
          - "1.10.0"
    steps:
      - uses: actions/checkout@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.5"
          python-version: "${{ matrix.py }}"
          enable-cache: true
      - name: Install dependencies
        run: uv sync
      - name: Install matrix overrides
        run: uv add dagster~=${{ matrix.dagster_version }}
      - name: Run pre-commit hooks
        run: uv run pre-commit run --all-files

  qa_success:
    name: QA Success
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Success
        run: echo "QA Succeeded!"

  publish:
    needs: qa_success
    if: contains(github.ref, 'refs/tags/')
    name: Publish to PyPI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.5"
          python-version: "3.11"
          enable-cache: true
      - name: Generate Version
        run: export VERSION=$(uv run dunamai from any --style pep440) && echo "Version is $VERSION" && echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Publish to PyPI
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          uv run hatch version ${{ github.ref }}
          uv build
          uv publish
